{"version":3,"file":"static/js/542.7cbf75a4.chunk.js","mappings":"uKACA,MAA4B,6B,SCK5B,EAJkB,SAAC,GAAD,IAAGA,EAAH,EAAGA,SAAH,OAChB,gBAAKC,UAAWC,EAAhB,SAA8BF,GADd,C,8LCDlB,GAAgB,KAAO,2BAA2B,MAAQ,4BAA4B,WAAa,iCAAiC,cAAgB,oCAAoC,YAAc,kCAAkC,OAAS,8B,SC6GjP,EApGqB,WACnB,OAAwBG,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,MAEXC,EAAoB,SAAAC,GACxB,MAAwBA,EAAIC,OAApBZ,EAAR,EAAQA,KAAMa,EAAd,EAAcA,MAEd,OAAQb,GACN,IAAK,OACHC,EAAQY,GACR,MACF,IAAK,QACHV,EAASU,GACT,MACF,IAAK,WACHR,EAAYQ,GAMjB,EAEKC,EAAgB,mCAAG,WAAMH,GAAN,8EACvBA,EAAII,iBADmB,SAGfC,EAAU,CAAEhB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,GAHV,SAIfI,GAASS,EAAAA,EAAAA,IAAcD,IAAUE,SAJlB,OAKrBC,EAAAA,GAAAA,QAAA,mBAA0BnB,IAC1BM,EAAS,IAAK,CAAEc,SAAS,IACzBC,IAPqB,kDASrBF,EAAAA,GAAAA,MAAA,yBATqB,0DAAH,sDAahBE,EAAY,WAChBpB,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAED,OACE,UAACiB,EAAA,EAAD,YACE,eAAIzB,UAAWC,EAAAA,UAAf,2BAEA,UAACyB,EAAA,EAAD,CAAMC,SAAUV,EAAhB,WACE,UAACS,EAAA,QAAD,CAAY1B,UAAU,OAAO4B,UAAU,iBAAvC,WACE,SAACF,EAAA,QAAD,oBACA,SAACA,EAAA,UAAD,CACEG,KAAK,OACL1B,KAAK,OACLa,MAAOb,EACP2B,SAAUjB,EACVkB,YAAY,kBACZC,UAAQ,EACRhC,UAAWC,EAAAA,oBAIf,UAACyB,EAAA,QAAD,CAAY1B,UAAU,OAAO4B,UAAU,iBAAvC,WACE,SAACF,EAAA,QAAD,6BACA,SAACA,EAAA,UAAD,CACEG,KAAK,QACL1B,KAAK,QACLa,MAAOX,EACPyB,SAAUjB,EACVkB,YAAY,mBACZC,UAAQ,EACRhC,UAAWC,EAAAA,oBAIf,UAACyB,EAAA,QAAD,CAAY1B,UAAU,OAAO4B,UAAU,oBAAvC,WACE,SAACF,EAAA,QAAD,wBACA,SAACA,EAAA,UAAD,CACEG,KAAK,WACL1B,KAAK,WACLa,MAAOT,EACPuB,SAAUjB,EACVkB,YAAY,iBACZC,UAAQ,EACRhC,UAAWC,EAAAA,iBAEb,SAACyB,EAAA,OAAD,CAAW1B,UAAWC,EAAAA,WAAtB,qDAIF,SAACgC,EAAA,EAAD,CAAQC,QAAQ,UAAUL,KAAK,SAAS7B,UAAWC,EAAAA,YAAnD,2BAMP,C","sources":["webpack://react-homework-template/./src/components/Container/container.module.css?0cd8","components/Container/Container.jsx","webpack://react-homework-template/./src/pages/Register/registerPage.module.css?dbf7","pages/Register/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container_container__yWowe\"};","import s from '../Container/container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={s.container}>{children}</div>\n);\n\nexport default Container;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"registerPage_form__JcWXH\",\"label\":\"registerPage_label__+ZlQD\",\"text_muted\":\"registerPage_text_muted__gWklH\",\"input_control\":\"registerPage_input_control__unFDc\",\"button_form\":\"registerPage_button_form__3+Ild\",\"active\":\"registerPage_active__OCUzA\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { registerThunk } from 'redux/auth/authOperations';\nimport Container from 'components/Container';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { toast } from 'react-toastify';\nimport s from './registerPage.module.css';\n\nconst RegisterPage = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n\n  const dispatch = useDispatch();\n\n  const handleInputChange = evt => {\n    const { name, value } = evt.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleFormsubmit = async evt => {\n    evt.preventDefault();\n    try {\n      const profile = { name, email, password };\n      await dispatch(registerThunk(profile)).unwrap();\n      toast.success(`Welcome, ${name}`);\n      navigate('/', { replace: true });\n      formReset();\n    } catch (error) {\n      toast.error(`Something went wrong'`);\n    }\n  };\n\n  const formReset = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <Container>\n      <h2 className={s.reg_title}>Registration</h2>\n\n      <Form onSubmit={handleFormsubmit}>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleInputChange}\n            placeholder=\"Enter your name\"\n            required\n            className={s.input_control}\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleInputChange}\n            placeholder=\"Enter your email\"\n            required\n            className={s.input_control}\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleInputChange}\n            placeholder=\"Enter password\"\n            required\n            className={s.input_control}\n          />\n          <Form.Text className={s.text_muted}>\n            Don't tell your password to anyone!\n          </Form.Text>\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\" className={s.button_form}>\n          Register\n        </Button>\n      </Form>\n    </Container>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["children","className","s","useState","name","setName","email","setEmail","password","setPassword","navigate","useNavigate","dispatch","useDispatch","handleInputChange","evt","target","value","handleFormsubmit","preventDefault","profile","registerThunk","unwrap","toast","replace","formReset","Container","Form","onSubmit","controlId","type","onChange","placeholder","required","Button","variant"],"sourceRoot":""}